<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>about</value>
    <comment>AboutPage</comment>
  </data>
  <data name="ApplicationAuthor" xml:space="preserve">
    <value>by Benjamin Sautermeister</value>
    <comment>AboutPage</comment>
  </data>
  <data name="ApplicationDescription" xml:space="preserve">
    <value>This app extends the Photos-Hub of Windows Phone to enable a fast and easy functionality to take notes on your pictures or highlight the most important parts.</value>
    <comment>AboutPage</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Photo Marker</value>
    <comment>General</comment>
  </data>
  <data name="ApplicationVersion" xml:space="preserve">
    <value>2.2</value>
    <comment>General</comment>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>Contributors</value>
    <comment>AboutPage</comment>
  </data>
  <data name="MoreApps" xml:space="preserve">
    <value>more apps</value>
    <comment>AboutPage</comment>
  </data>
  <data name="PrivacyInfo" xml:space="preserve">
    <value>privacy info</value>
    <comment>About Page</comment>
  </data>
  <data name="RateAndReview" xml:space="preserve">
    <value>rate and review</value>
    <comment>AboutPage</comment>
  </data>
  <data name="SupportAndFeedback" xml:space="preserve">
    <value>support and feedback</value>
    <comment>AboutPage</comment>
  </data>
  <data name="FeedbackEmail" xml:space="preserve">
    <value>apps@bsautermeister.de</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="InfoChoosePhoto" xml:space="preserve">
    <value>select a picture you would like to edit...</value>
    <comment>MainPage</comment>
  </data>
  <data name="AppBarSave" xml:space="preserve">
    <value>save</value>
    <comment>EditPage</comment>
  </data>
  <data name="AppBarSelectPicture" xml:space="preserve">
    <value>select</value>
    <comment>Edit Page</comment>
  </data>
  <data name="InAppStoreLoading" xml:space="preserve">
    <value>Loading...</value>
    <comment>InAppStorePage</comment>
  </data>
  <data name="InAppStoreNoProducts" xml:space="preserve">
    <value>There are currently no in-app purchases available. Please try again later.</value>
    <comment>InAppStorePage</comment>
  </data>
  <data name="InAppStorePurchased" xml:space="preserve">
    <value>purchased</value>
    <comment>InAppStorePage</comment>
  </data>
  <data name="InAppStoreTitle" xml:space="preserve">
    <value>in-app store</value>
    <comment>InAppStorePage</comment>
  </data>
  <data name="MessageBoxNoInfo" xml:space="preserve">
    <value>Launching the photo information app could not be started. I'm very sorry!</value>
    <comment>MessageBox</comment>
  </data>
  <data name="MessageBoxWarning" xml:space="preserve">
    <value>Warning</value>
    <comment>MessageBox</comment>
  </data>
  <data name="ShowPhotoInfo" xml:space="preserve">
    <value>show picture information</value>
    <comment>EditPage</comment>
  </data>
  <data name="Info1" xml:space="preserve">
    <value>Open your library and select an image</value>
    <comment>MainPage-Info</comment>
  </data>
  <data name="Info2" xml:space="preserve">
    <value>Select Edit options</value>
    <comment>MainPage-Info</comment>
  </data>
  <data name="Info3Close" xml:space="preserve">
    <value>'</value>
    <comment>MainPage-Info</comment>
  </data>
  <data name="Info3Open" xml:space="preserve">
    <value>Select '</value>
    <comment>MainPage-Info</comment>
  </data>
  <data name="Info4" xml:space="preserve">
    <value>The photo can be edited instantly...</value>
    <comment>MainPage-Info</comment>
  </data>
  <data name="AppBarUndo" xml:space="preserve">
    <value>undo</value>
    <comment>EditPage</comment>
  </data>
  <data name="Share" xml:space="preserve">
    <value>share</value>
    <comment>General</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>edit</value>
    <comment>General</comment>
  </data>
  <data name="AppBarPen" xml:space="preserve">
    <value>marker</value>
    <comment>EditPage</comment>
  </data>
  <data name="MessageBoxNoSave" xml:space="preserve">
    <value>Could not save the photo. I'm verry sorry!</value>
    <comment>MessageBox</comment>
  </data>
  <data name="MessageBoxUnknownError" xml:space="preserve">
    <value>Ooops! Anything went wrong. I'm very sorry!</value>
    <comment>MessageBox</comment>
  </data>
  <data name="SavingPicuture" xml:space="preserve">
    <value>Saving picture...</value>
    <comment>EditPage</comment>
  </data>
  <data name="AppBarZoom" xml:space="preserve">
    <value>zoom</value>
    <comment>EditPage</comment>
  </data>
  <data name="ZoomPopupText" xml:space="preserve">
    <value>Using two fingers you can easily move or zoom the image. This allows faster and even more precise markings.</value>
    <comment>EditPage</comment>
  </data>
  <data name="ZoomPopupTitle" xml:space="preserve">
    <value>Did you know?</value>
    <comment>EditPage</comment>
  </data>
  <data name="MessageBoxAttention" xml:space="preserve">
    <value>Attention</value>
    <comment>EditPage</comment>
  </data>
  <data name="MessageBoxExitWithoutSave" xml:space="preserve">
    <value>Do you really want to quit without saving the picture?</value>
    <comment>EditPage</comment>
  </data>
  <data name="FontsHeader" xml:space="preserve">
    <value>FONTS</value>
  </data>
  <data name="MessageBoxMultipleTextUpgrade" xml:space="preserve">
    <value>Using multiple text elements requires Photo Marker PRO version. Do you want to upgrade now?</value>
    <comment>EditPage</comment>
  </data>
  <data name="AppBarText" xml:space="preserve">
    <value>text</value>
    <comment>EditPage</comment>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>settings</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="StylusOptimized" xml:space="preserve">
    <value>Optimized for Stylus</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="AppBarCrop" xml:space="preserve">
    <value>crop</value>
    <comment>EditPage</comment>
  </data>
  <data name="AppBarDone" xml:space="preserve">
    <value>done</value>
    <comment>EditPage</comment>
  </data>
</root>